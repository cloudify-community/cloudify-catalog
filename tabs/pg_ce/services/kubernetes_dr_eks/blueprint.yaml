tosca_definitions_version: cloudify_dsl_1_4

imports:
  - cloudify/types/types.yaml
  - https://cloudify-release-eu.s3.eu-west-1.amazonaws.com/cloudify/blueprints/6.4/custom_types.yaml

inputs:

  region_name_a:
    type: string
    description: AWS Region Name for the first cluster
    display_label: First AWS Region Name
    default: us-east-1
    constraints:
      - valid_values:
        - us-east-1 #US East (N. Virginia)
        - us-east-2 #US East (Ohio) 
        - us-west-1 #US West (N. California)  
        - us-west-2 #US West (Oregon) 
        - ca-central-1  #Canada (Central) 
        - eu-central-1  #Europe (Frankfurt) 
        - eu-west-1 #Europe (Ireland) 
        - eu-west-2 #Europe (London)  
        - eu-south-1  #Europe (Milan) 
        - eu-west-3 #Europe (Paris) 
        - eu-north-1  #Europe (Stockholm) 
        - ap-northeast-3  #Asia Pacific (Osaka) 
        - ap-northeast-2  #Asia Pacific (Seoul) 
        - ap-southeast-1  #Asia Pacific (Singapore) 
        - ap-southeast-2  #Asia Pacific (Sydney)  
        - ap-northeast-1  #Asia Pacific (Tokyo) 

  region_name_b:
    type: string
    description: AWS Region Name for the second cluster
    display_label: Second AWS Region Name
    default: eu-west-1
    constraints:
      - valid_values:
        - us-east-1 #US East (N. Virginia)
        - us-east-2 #US East (Ohio) 
        - us-west-1 #US West (N. California)  
        - us-west-2 #US West (Oregon) 
        - ca-central-1  #Canada (Central) 
        - eu-central-1  #Europe (Frankfurt) 
        - eu-west-1 #Europe (Ireland) 
        - eu-west-2 #Europe (London)  
        - eu-south-1  #Europe (Milan) 
        - eu-west-3 #Europe (Paris) 
        - eu-north-1  #Europe (Stockholm) 
        - ap-northeast-3  #Asia Pacific (Osaka) 
        - ap-northeast-2  #Asia Pacific (Seoul) 
        - ap-southeast-1  #Asia Pacific (Singapore) 
        - ap-southeast-2  #Asia Pacific (Sydney)  
        - ap-northeast-1  #Asia Pacific (Tokyo)

  domain_owned:
    type: string
    description: | 
      Owned domain for load balancer creation
    display_label: |
      Owned domain for load balancer creation
    default: "aws.com"

  resource_prefix:
    type: string
    description: |
      If not provided, it will be auto-generated.
    display_label:
      The prefix for resource name creation
    default: ''
    constraints:
      - pattern: '(^ *$)|(^[a-zA-Z][a-zA-Z0-9]+$)'

node_templates:
  prefix:
    type: eaas.nodes.UniquePrefixGenerator
    properties:
      predefined_value: { get_input: resource_prefix }
      
  eks_cluster_a:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          blueprint_archive: blueprints/eks_network.zip
          external_resource: false
        deployment:
          inputs: 
            aws_access_key_id: { get_secret: aws_access_key_id }
            aws_secret_access_key: { get_secret: aws_secret_access_key }
            aws_region_name: { get_input: region_name_a }
            availability_zone_1: { concat: [  { get_input: region_name_a  }, 'a' ] }
            availability_zone_2: { concat: [  { get_input: region_name_a  }, 'c' ] }
            eks_cluster_name: { concat: [ { get_attribute: [ prefix , value ] }, '-eks-adr' ] }
            eks_nodegroup_name: { concat: [ 'eks_node_group', { get_attribute: [ prefix , value ] }, '-eks-adr' ] }
            service_account_name: "cloudify"
            agent_key_name: { concat : [ agent_key_name, 'adr']}
    relationships:
      - type: cloudify.relationships.depends_on
        target: prefix

  eks_cluster_b:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          blueprint_archive: blueprints/eks_network.zip
          external_resource: false
        deployment:
          inputs: 
            aws_access_key_id: { get_secret: aws_access_key_id }
            aws_secret_access_key: { get_secret: aws_secret_access_key }
            aws_region_name: { get_input: region_name_b }
            availability_zone_1: { concat: [  { get_input: region_name_b  }, 'a' ] }
            availability_zone_2: { concat: [  { get_input: region_name_b  }, 'c' ] }
            eks_cluster_name: { concat: [ { get_attribute: [ prefix , value ] }, '-eks-bdr' ] }
            eks_nodegroup_name: { concat: [ 'eks_node_group', { get_attribute: [ prefix , value ] }, '-eks-bdr' ] }
            service_account_name: "cloudify"
            agent_key_name: { concat : [ agent_key_name, 'bdr']}
    relationships:
      - type: cloudify.relationships.depends_on
        target: prefix
  
  database:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          blueprint_archive: blueprints/database.zip
          external_resource: false
        deployment:
          inputs: 
            aws_access_key_id: { get_secret: aws_access_key_id }
            aws_secret_access_key: { get_secret: aws_secret_access_key }
            aws_region_name_a: { get_input: region_name_a }
            aws_region_name_b: { get_input: region_name_b }
            resource_prefix: { get_attribute: [ prefix , value ] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: eks_cluster_a
      - type: cloudify.relationships.depends_on
        target: eks_cluster_b

  s3:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          blueprint_archive: blueprints/s3.zip
          external_resource: false
        deployment:
          inputs: 
            aws_access_key_id: { get_secret: aws_access_key_id }
            aws_secret_access_key: { get_secret: aws_secret_access_key }
            aws_region_name_a: { get_input: region_name_a }
            aws_region_name_b: { get_input: region_name_b }
            resource_prefix: { get_attribute: [ prefix , value ] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: eks_cluster_a
      - type: cloudify.relationships.depends_on
        target: eks_cluster_b

  load_balancer:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          blueprint_archive: blueprints/lb.zip
          external_resource: false
        deployment:
          inputs: 
            aws_access_key_id: { get_secret: aws_access_key_id }
            aws_secret_access_key: { get_secret: aws_secret_access_key }
            domain_primary: { get_attribute: [ eks_cluster_a, capabilities, srv_hostname ] }
            domain_failover: { get_attribute: [ eks_cluster_b, capabilities, srv_hostname ] }
            domain_owned:  { get_input: domain_owned }
    relationships:
      - type: cloudify.relationships.depends_on
        target: s3
    
            
outputs:

  lb_endpoint:
    value: { get_attribute: [ load_balancer, capabilities, endpoint] }
  
  s3_failover:
    value: { get_attribute: [ s3, capabilities, s3_failover ] }

  s3_primary:
    value: { get_attribute: [ s3, capabilities, s3_primary ] }

  database_login:
    value: { get_attribute: [ database, capabilities, admin_login ] }

  database_password:
    value: { get_attribute: [ database, capabilities, admin_password ] }

  database_name:
    value: { get_attribute: [ database, capabilities, db_name ] }

  database_port:
    value: { get_attribute: [ database, capabilities, db_port ] }

  db_conn_primary:
    value: { get_attribute: [ database, capabilities, endpoint_primary ] }

  db_conn_failover:
    value: { get_attribute: [ database, capabilities, endpoint_failover ] }


  


  