{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "resource_prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Prefix to apply to resource names"
      }
    },
    "vm_size": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "metadata": {
        "description": "Location/region VM size name, e.g. 'Standard_M8ms'"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "EastUS",
      "metadata": {
        "description": "Azure location name"
      }
    },
    "image_publisher": {
      "type": "string",
      "defaultValue": "Canonical",
      "metadata": {
        "description": "Image publisher name, e.g. 'Canonical'"
      }
    },
    "image_offer": {
      "type": "string",
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "OS offer, e.g. 'UbuntuServer'"
      }
    },
    "image_sku": {
      "type": "string",
      "defaultValue": "18.04-LTS",
      "metadata": {
        "description": "Enter image SKU, e.g. '18.04-LTS'"
      }
    },
    "image_version": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Image version, e.g. 'latest'"
      }
    },
    "admin_username": {
      "type": "string"
    },
    "admin_password": {
      "type": "string"
    },
    "ssh_keydata": {
      "type": "string"
    }
  },

  "variables": {
    "vm_size": "[parameters('vm_size')]",
    "location": "[parameters('location')]",
    "image_publisher": "[parameters('image_publisher')]",
    "image_offer": "[parameters('image_offer')]",
    "image_sku": "[parameters('image_sku')]",
    "image_version": "[parameters('image_version')]",
    "admin_username": "[parameters('admin_username')]",
    "admin_password": "[parameters('admin_password')]",
    "sg_name": "[concat(parameters('resource_prefix'),'sg')]",
    "saccount_name": "[concat(parameters('resource_prefix'), 'storage')]",
    "nic_name": "[concat(parameters('resource_prefix'), 'nic')]",
    "network_name": "[concat(parameters('resource_prefix'), 'network')]",
    "subnet_name": "[concat(parameters('resource_prefix'),'subnet')]",
    "vnet_id": "[resourceId('Microsoft.Network/virtualNetworks', variables('network_name'))]",
    "subnet_ref": "[concat(variables('vnet_id'),'/subnets/',variables('subnet_name'))]",
    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('saccount_name')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('resource_prefix'), 'sg')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
              "description": "Locks inbound down to ssh default port 22.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 123,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "public_ip",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('network_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('sg_name'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.10.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet_name')]",
            "properties": {
              "addressPrefix": "10.10.10.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sg_name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "name": "[variables('nic_name')]",
      "dependsOn": [
        "Microsoft.Network/publicIPAddresses/public_ip",
        "[concat('Microsoft.Network/virtualNetworks/', variables('network_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'public_ip')]"
              },
              "subnet": {
                "id": "[variables('subnet_ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('resource_prefix'),'host')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('saccount_name'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vm_size')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('resource_prefix'),'host')]",
          "adminUsername": "[parameters('admin_username')]",
          "adminPassword": "[parameters('admin_password')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/',parameters('admin_username'),'/.ssh/authorized_keys')]",
                  "keyData": "[parameters('ssh_keydata')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('image_publisher')]",
            "offer": "[parameters('image_offer')]",
            "sku": "[parameters('image_sku')]",
            "version": "[parameters('image_version')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('saccount_name'),'.blob.core.windows.net/azsample-vhds','/osDisk1.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_name'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "public_ip": {
      "type": "string",
      "value": "[reference('public_ip').ipAddress]"
    }
  }
}
