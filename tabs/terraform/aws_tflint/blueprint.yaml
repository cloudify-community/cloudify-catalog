tosca_definitions_version: cloudify_dsl_1_4

description: >
  This blueprint creates infrastructure using Terraform.

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-terraform-plugin
  - plugin:cloudify-utilities-plugin

labels:
  csys-obj-type:
    values:
      - service

inputs:

  aws_region_name:
    type: string
    display_label: AWS Region Name
    default: us-east-1
    description: AWS region name
    constraints:
      - valid_values:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - eu-south-1
          - eu-west-3
          - eu-north-1
          - af-south-1
          - ap-east-1
          - ap-south-1
          - ap-northeast-3
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-2
          - ap-northeast-1
          - ca-central-1
          - cn-north-1
          - cn-northwest-1
          - me-south-1
          - sa-east-1

  module_source:
    type: string
    display_label: Module source URL
    description: Module source URL
    default: https://github.com/cloudify-community/tf-source/archive/refs/heads/main.zip

  module_source_path:
    type: string
    display_label: Module to deploy path
    description: Module to deploy path
    default: "template/modules/public_vm/"

  tflint_config:
    type: dict
    display_label: TFLint source URL
    default:
      enable: true
      installation_source: https://github.com/terraform-linters/tflint/releases/download/v0.34.1/tflint_linux_amd64.zip
    description: |
      TFlint source URL

node_templates:

  key:
    type: cloudify.keys.nodes.RSAKey
    properties:
      resource_config:
        key_name: { concat: ["RSA-", { get_sys: [deployment, id] }] }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            store_public_key_material: true
            store_private_key_material: true

  terraform:
    type: cloudify.nodes.terraform
    properties:
      resource_config:
        use_existing_resource: false
      terraform_config: {}

  terraform_module:
    type: cloudify.nodes.terraform.Module
    properties:
      tflint_config: { get_input: tflint_config }
      resource_config:
        provider:
          providers: []
        variables:
          aws_region: { get_input: aws_region_name }
          aws_zone: { concat: [ get_input: aws_region_name, a ]}
          secret_key: { get_secret: aws_secret_key }
          access_key: { get_secret: aws_access_key }
          admin_key_public: { get_attribute: [key, public_key_export] }
          admin_user: admin
        source:
          location: { get_input: module_source }
        source_path: { get_input: module_source_path }
    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host
      - target: key
        type: cloudify.relationships.depends_on

capabilities:
  outputs:
    description: Terraform outputs
    value: { get_attribute: [ terraform_module, outputs] }
  plan:
    description: Terraform plan
    value: { get_attribute: [ terraform_module, plan] }