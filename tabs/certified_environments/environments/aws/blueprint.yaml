tosca_definitions_version: cloudify_dsl_1_4

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-aws-plugin
  - plugin:cloudify-utilities-plugin

labels:
  csys-obj-type:
    values:
      - environment

inputs:

  aws_region_name:
    type: string
    description: AWS Region Name
    display_label: AWS Region Name
    default: us-east-1
    constraints:
      - valid_values:
          - us-east-1 #US East (N. Virginia)
          - us-east-2 #US East (Ohio)
          - us-west-1 #US West (N. California)
          - us-west-2 #US West (Oregon)
          - ca-central-1  #Canada (Central)
          - eu-central-1  #Europe (Frankfurt)
          - eu-west-1 #Europe (Ireland)
          - eu-west-2 #Europe (London)
          - eu-south-1  #Europe (Milan)
          - eu-west-3 #Europe (Paris)
          - eu-north-1  #Europe (Stockholm)
          - ap-northeast-3  #Asia Pacific (Osaka)
          - ap-northeast-2  #Asia Pacific (Seoul)
          - ap-southeast-1  #Asia Pacific (Singapore)
          - ap-southeast-2  #Asia Pacific (Sydney)
          - ap-northeast-1  #Asia Pacific (Tokyo)

node_templates:
  key:
    type: cloudify.keys.nodes.RSAKey
    properties:
      resource_config:
        key_name: { concat: ["RSA-", { get_sys: [deployment, id] }] }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            store_public_key_material: true
            store_private_key_material: true

  keypair:
    type: cloudify.nodes.aws.ec2.Keypair
    properties:
      client_config:
        aws_access_key_id: { get_secret: aws_access_key_id }
        aws_secret_access_key: { get_secret: aws_secret_access_key }
        region_name: { get_input: aws_region_name }
      resource_config:
        PublicKeyMaterial: { get_attribute: [key, public_key_export] }
    relationships:
      - type: cloudify.relationships.connected_to
        target: key

capabilities:
  cloud_type:
    description: Cloud provider name
    value: aws
  cloud_credentials:
    description: Cloud Credentials
    value:
      aws_access_key_id: { get_secret: aws_access_key_id }
      aws_keypair: { get_attribute: [keypair, aws_resource_id] }
      aws_secret_access_key: { get_secret: aws_secret_access_key }
      public_key_content: { get_attribute: [key, public_key_export] }
      private_key_content: { get_attribute: [key, private_key_export] }
      region_name: { get_input: aws_region_name }
