tosca_definitions_version: cloudify_dsl_1_4

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-fabric-plugin
  - https://cloudify-release-eu.s3.eu-west-1.amazonaws.com/cloudify/blueprints/6.4/custom_types.yaml

inputs:
  resource_prefix:
    type: string
    display_label: Resource Prefix
    description: The resource prefix for resources naming
    default: ''
    constraints:
      - pattern: '(^ *$)|(^[a-zA-Z][a-zA-Z0-9]+$)'

labels:
  csys-obj-type:
    values:
      - service

node_templates:
  prefix:
    type: eaas.nodes.UniquePrefixGenerator
    properties:
      predefined_value: { get_input: resource_prefix }

  network:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { concat: [ { get_attribute: [ prefix, value ] }, '-network' ] }
          blueprint_archive: https://github.com/cloudify-community/eaas-example/releases/download/2.0rc1/single_node.zip
          main_file_name: azure-blueprint.yaml
        deployment:
          id: { get_secret: [ eaas_params, { get_environment_capability: cloud_type }, dev-small, network, deployment ] }
          inputs:
            resource_config: { get_secret: [ eaas_params, { get_environment_capability: cloud_type }, dev-small, network, inputs ] }
            resource_prefix: { get_attribute: [ prefix, value ] }
            cloud_credentials: { get_environment_capability: cloud_credentials }
          auto_inc_suffix: true
    relationships:
      - type: cloudify.relationships.depends_on
        target: prefix

  database:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/install-psql.sh
            fabric_env: &fabric_env
              host: { get_attribute: [ network, capabilities, db_vm_ip ] }
              user: centos
              connect_kwargs:
                pkey: { get_environment_capability: [cloud_credentials, private_key_content ] }
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/configure-psql.sh
            fabric_env: *fabric_env
            master_username: { get_secret: [ eaas_params, { get_environment_capability: cloud_type }, dev-small, db, inputs, master_username ] }
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/start-psql.sh
            fabric_env: *fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/stop-psql.sh
            fabric_env: *fabric_env
    relationships:
      - target: network
        type: cloudify.relationships.depends_on

capabilities:
  host:
    description: Kubernetes VM IP
    value: { get_attribute: [ network, capabilities, db_vm_ip ] }
  master_username:
    description: PostgreSQL master username
    value: postgres
  vm_username:
    description: PostgreSQL master password
    value: centos
