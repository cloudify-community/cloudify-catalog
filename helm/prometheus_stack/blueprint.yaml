tosca_definitions_version: cloudify_dsl_1_3

description: Cloudify helm-wordpress blueprint. Installs Wordpress Helm chart on top of Kubernetes cluster.

imports:
  - https://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-helm-plugin
  - plugin:cloudify-kubernetes-plugin

inputs:

  release_name:
    description: |
      Name of the helm release
    type: string
    default: example

node_templates:

  password_generator:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          executor: central_deployment_agent
          implementation: scripts/generate-password.sh

  helm_install:
    type: cloudify.nodes.helm.Binary
    properties:
      use_existing_resource: false
      installation_source: 'https://get.helm.sh/helm-v3.7.2-linux-amd64.tar.gz'

  repo:
    type: cloudify.nodes.helm.Repo
    properties:
      resource_config:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host

  release:
    type: cloudify.nodes.helm.Release
    properties:
      client_config:
        configuration:
          api_options:
            host: { concat : [ "https://", { get_environment_capability: kubernetes_cluster_host } ] }
            api_key: { get_environment_capability: token }
            ssl_ca_cert: { get_environment_capability: ssl_ca_cert }
      resource_config:
        name: { get_input: release_name }
        chart:  prometheus-community/kube-prometheus-stack
        set_values:
          - name: grafana.adminPassword
            value: { get_attribute: [ password_generator, master_password ] }
          - name: grafana.service.type
            value: LoadBalancer
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host
      - target: repo
        type: cloudify.relationships.depends_on

  svc_grafana:
    type: cloudify.kubernetes.resources.Service
    properties:
      client_config:
        configuration:
          api_options:
            host: { concat : [ "https://", { get_environment_capability: kubernetes_cluster_host } ] }
            api_key: { get_environment_capability: token }
            ssl_ca_cert: { get_environment_capability: ssl_ca_cert }
      use_external_resource: true
      allow_node_redefinition: false
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          name: { concat: [ { get_input: release_name }, -grafana ] } 
          namespace: default
    relationships:
      - type: cloudify.relationships.depends_on
        target: release

labels:
  obj-type: 
    values: 
      - helm

capabilities:
  grafana_page:
    value: { concat: [ { get_attribute: [svc_grafana, kubernetes, status, load_balancer, ingress, 0, ip ] }, "/login"] }
  grafana_password:
    value: { get_attribute: [ password_generator, master_password ] }

