tosca_definitions_version: cloudify_dsl_1_4

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-aws-plugin

inputs:

  aws_region_name:
    description: AWS region name
    display_label: AWS Region Name
    type: string
    default: us-east-1
    constraints:
      - valid_values:
        - us-east-1 #US East (N. Virginia)
        - us-east-2 #US East (Ohio)
        - us-west-1 #US West (N. California)
        - us-west-2 #US West (Oregon)
        - ca-central-1  #Canada (Central)
        - eu-central-1  #Europe (Frankfurt)
        - eu-west-1 #Europe (Ireland)
        - eu-west-2 #Europe (London)
        - eu-south-1  #Europe (Milan)
        - eu-west-3 #Europe (Paris)
        - eu-north-1  #Europe (Stockholm)
        - ap-northeast-3  #Asia Pacific (Osaka)
        - ap-northeast-2  #Asia Pacific (Seoul)
        - ap-southeast-1  #Asia Pacific (Singapore)
        - ap-southeast-2  #Asia Pacific (Sydney)
        - ap-northeast-1  #Asia Pacific (Tokyo)

  bucket_name:
    description: S3 Bucket Name
    display_label: S3 Bucket Name
    type: string
    default: test-cloudify-bucket

dsl_definitions:
  client_config: &client_config
    aws_access_key_id: { get_secret: aws_access_key_id }
    aws_secret_access_key: { get_secret: aws_secret_access_key }
    region_name: { get_input: aws_region_name }

node_templates:

  bucket:
    type: cloudify.nodes.aws.s3.Bucket
    properties:
      resource_config:
        Bucket: { get_input: bucket_name }
        ACL: public-read-write
      client_config: *client_config

  bucket_lifecycle_configuration:
    type: cloudify.nodes.aws.s3.BucketLifecycleConfiguration
    properties:
      resource_config:
        LifecycleConfiguration:
          Rules:
          - ID: Standard Rule LFC
            Prefix: boto3
            Status: Disabled
            Transition:
              Days: 31
              StorageClass: STANDARD_IA
            Expiration:
              Days: 95
      client_config: *client_config
    relationships:
    - type: cloudify.relationships.depends_on
      target: bucket

  bucket_policy:
    type: cloudify.nodes.aws.s3.BucketPolicy
    properties:
      resource_config:
        Policy:
          Version: '2012-10-17'
          Statement:
          - Sid: EveryoneGetPlugin
            Effect: Allow
            Principal: "*"
            Action:
            - "s3:GetObject"
            Resource: { concat: [ 'arn:aws:s3:::', { get_property: [ bucket, resource_config, Bucket ] } , '/*' ] }
      client_config: *client_config
    relationships:
    - type: cloudify.relationships.depends_on
      target: bucket

  bucket_tagging:
    type: cloudify.nodes.aws.s3.BucketTagging
    properties:
      resource_config:
        Tagging:
          TagSet:
          - Key: Name
            Value: aws-test-bucket-tagging
      client_config: *client_config
    relationships:
    - type: cloudify.relationships.depends_on
      target: bucket

labels:
  obj-type: 
    values: 
      - aws