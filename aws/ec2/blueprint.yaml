tosca_definitions_version: cloudify_dsl_1_4
description: >
  The blueprint generates SSH public and private keys and stores them in secret store.
  The public key is used to create Keypair that is attached to the created EC2 instance.
  In case case the SSH key already exists in the secret store they will be used.

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-aws-plugin
  - plugin:cloudify-utilities-plugin

inputs:
  region_name:
      type: string
      display_label: AWS Region Name
      description: Select AWS region name
      default: us-east-1
      constraints:
        - valid_values:
          - us-east-1 #US East (N. Virginia)
          - us-west-1 #US West (N. California)
          - us-west-2 #US West (Oregon)
          - ca-central-1  #Canada (Central)
          - eu-west-1 #Europe (Ireland)

  instance_type:
    description: Select instance size
    type: string
    display_label: Instance Type
    default: t2.micro
    constraints:
      - valid_values:
        - t2.micro
        - t2.small
        - t2.medium
        - t2.large  

  image_id:
    description: The map between region and image id, it is used in EC2 instance to select the right image id per selected region
    type: dict
    default:
      ca-central-1: ami-033e6106180a626d0
      us-east-1: ami-03248a0341eadb1f1
      us-west-1: ami-01dd5a8ef26e6341d
      us-west-2: ami-024b56adf74074ca6
      eu-west-1: ami-0eee6eb870dc1cefa
    hidden: true

  aws_credentials:
    description: The credentials for AWS
    type: dict
    default:
      aws_access_key_id: { get_secret: aws_access_key_id }
      aws_secret_access_key: { get_secret: aws_secret_access_key }
      region_name: { get_input: region_name }
    hidden: true

node_templates:
  vm_ssh_key:
    type: cloudify.keys.nodes.RSAKey
    properties:
      resource_config:
        key_name: ec2
        openssh_format: true
      use_secret_store: true
      use_secrets_if_exist: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: keys.cloudify_ssh_key.operations.create
          inputs:
            store_private_key_material: true

  vm_keypair:
    type: cloudify.nodes.aws.ec2.Keypair
    properties:
      client_config: { get_input: aws_credentials}
      resource_config:
        KeyName: cloudify_autogenerated_key
        PublicKeyMaterial: { get_attribute: [vm_ssh_key, public_key_export] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: vm_ssh_key

  vm:
    type: cloudify.nodes.aws.ec2.Instances
    properties:
      client_config: { get_input: aws_credentials}
      agent_config:
        install_method: none
      resource_config:
        InstanceType: { get_input: instance_type }
        ImageId: { get_input: [ image_id, { get_input: region_name } ] }
      use_public_ip: true
    relationships:
      - type: cloudify.relationships.depends_on
        target: vm_keypair

labels:
  obj-type: 
    values: 
      - aws

capabilities:

  public_ip:
    description: The public ip of the EC2 instance
    value: { get_attribute: [ vm, public_ip_address ] }

  private_key: 
    description: The private key for the EC2 instance
    value: { get_attribute: [vm_ssh_key, private_key_export] }